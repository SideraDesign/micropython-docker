name: Build Image

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'dev*'
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ github.repository_owner }}
  IMAGE_NAME: ${{ github.repository }}
  TARGET_PATH: micropython

jobs:
  build_and_push:
    permissions:
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU for multi platform support
        uses: docker/setup-qemu-action@v3
        with:
            platforms: linux/arm64

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get microptyhon version for image tag
        id: micropython-version
        run: |
          git submodule update --init micropython/
          cd micropython/
          git fetch --tags
          mpy_version=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "micropython version: ${mpy_version}"
          echo "MICROPY_VERSION=${mpy_version:1}" >> "$GITHUB_OUTPUT"
          git submodule deinit -f --all
          pwd
          ls -la .
          ls -la micropython/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.micropython-version.outputs.MICROPY_VERSION }}
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.description=‚ÄùA multi-platform Docker container image supporting both AMD64 and ARM64 architectures for running MicroPython."

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/dev-amd64.dockerfile
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
